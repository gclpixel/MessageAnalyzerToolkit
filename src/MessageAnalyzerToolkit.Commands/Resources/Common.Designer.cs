//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessageAnalyzerToolkit.Commands.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Common {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Common() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MessageAnalyzerToolkit.Commands.Resources.Common", typeof(Common).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;path to manifest file directory&gt;.
        /// </summary>
        public static string Argument_PathToDirectoty {
            get {
                return ResourceManager.GetString("Argument_PathToDirectoty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;path to manifest file&gt;.
        /// </summary>
        public static string Argument_PathToSource {
            get {
                return ResourceManager.GetString("Argument_PathToSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete all references and caches from message analyzer for the manifest..
        /// </summary>
        public static string ClearManifest_Description {
            get {
                return ResourceManager.GetString("ClearManifest_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClearManifest.
        /// </summary>
        public static string ClearManifest_Name {
            get {
                return ResourceManager.GetString("ClearManifest_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -file &lt;path to manifest file&gt; [&lt;path to manifest file&gt;]* | -directory &lt;path to manifest file directory&gt;.
        /// </summary>
        public static string ClearManifest_UsageFragment {
            get {
                return ResourceManager.GetString("ClearManifest_UsageFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a OPN file for message analyzer and replace an existing one in message analyzer cache.
        /// </summary>
        public static string CreateOPN_Description {
            get {
                return ResourceManager.GetString("CreateOPN_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CreateOPN.
        /// </summary>
        public static string CreateOPN_Name {
            get {
                return ResourceManager.GetString("CreateOPN_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -file &lt;path to manifest file&gt; [&lt;path to manifest file&gt;]* | -directory &lt;path to manifest file directory&gt;.
        /// </summary>
        public static string CreateOPN_UsageFragment {
            get {
                return ResourceManager.GetString("CreateOPN_UsageFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //Version 1.0
        ///protocol Facton_ActivityTree_Utils;
        ///
        ///map&lt;guid , ActivityTreeNode&gt; ActivityIds = {};
        ///map&lt;string , int&gt; ThreadIds = {};
        ///
        ///type ActivityTreeNode
        ///{
        ///	public string NodeName;
        ///	
        ///	public int LastId;
        ///}
        ///
        ///string GetActivityTree(guid activityId, uint processId, uint threadId)
        ///{
        ///	if(!(activityId in ActivityIds.Keys))
        ///	{
        ///		ActivityTreeNode node = new ActivityTreeNode();
        ///		node.LastId = 1;
        ///		node.NodeName = (processId as string) + &quot;/&quot; + (threadId as string) + &quot;/&quot; + (node.LastId as string) + [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Facton_ActivityTree_Utils {
            get {
                return ResourceManager.GetString("Facton_ActivityTree_Utils", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Already Exists: {0}.
        /// </summary>
        public static string Format_FileAlreadExists {
            get {
                return ResourceManager.GetString("Format_FileAlreadExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found: {0}.
        /// </summary>
        public static string Format_FileNotFound {
            get {
                return ResourceManager.GetString("Format_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to message analyzer not found: {0}.
        /// </summary>
        public static string Format_MessageAnalyzerNotInstalled {
            get {
                return ResourceManager.GetString("Format_MessageAnalyzerNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1}.
        /// </summary>
        public static string Format_OptionUsage {
            get {
                return ResourceManager.GetString("Format_OptionUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given manifestfile is not a valid etw provider manifest file..
        /// </summary>
        public static string Format_ProviderNotFound {
            get {
                return ResourceManager.GetString("Format_ProviderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to protocol Microsoft_AdoNet_SystemData
        ///	with ImportInfo{ProviderId = {6a4dfe53-eb50-5332-8473-7b7e10a94fd1},
        ///					EventsCount = 2,
        ///					KeywordsCount = 1};
        ///using Etw;
        ///using EtwEvent;
        ///using WindowsReference;
        ///using Utility;
        ///using Standard;
        ///using Diagnostics;
        ///using Facton_ActivityTree_Utils;
        ///
        ///type Keywords
        ///{
        ///	WindowsEtwKeywords StandardKeywords;
        ///
        ///	bool SqlClient;
        ///
        ///	public static Keywords Decode(ulong keyword)
        ///	{
        ///		Keywords result = new Keywords();
        ///		result.StandardKeywords = WindowsEtwKeywor [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Microsoft_AdoNet_SystemData {
            get {
                return ResourceManager.GetString("Microsoft_AdoNet_SystemData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to directory which contains etw manifest files.
        /// </summary>
        public static string OptionDirectory_Description {
            get {
                return ResourceManager.GetString("OptionDirectory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory.
        /// </summary>
        public static string OptionDirectory_LongName {
            get {
                return ResourceManager.GetString("OptionDirectory_LongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to d.
        /// </summary>
        public static string OptionDirectory_ShortName {
            get {
                return ResourceManager.GetString("OptionDirectory_ShortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows Help.
        /// </summary>
        public static string OptionHelp_Description {
            get {
                return ResourceManager.GetString("OptionHelp_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -Help (?).
        /// </summary>
        public static string OptionHelp_Name {
            get {
                return ResourceManager.GetString("OptionHelp_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -Help.
        /// </summary>
        public static string OptionHelp_Usage {
            get {
                return ResourceManager.GetString("OptionHelp_Usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string OptionSource_LongName {
            get {
                return ResourceManager.GetString("OptionSource_LongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to f.
        /// </summary>
        public static string OptionSource_ShortName {
            get {
                return ResourceManager.GetString("OptionSource_ShortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to one or more etw manifest files.
        /// </summary>
        public static string OptionSources_Description {
            get {
                return ResourceManager.GetString("OptionSources_Description", resourceCulture);
            }
        }
    }
}
